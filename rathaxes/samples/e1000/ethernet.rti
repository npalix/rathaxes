interface Ethernet : Socket, PCI, LKM
{
    provided type       Ethernet::Net {
        chunk LKM::includes();
        chunk ::decl();
    }
    provided type       Ethernet::Device {
        chunk   LKM::includes();
        chunk ::decl();
        method ::init(Ethernet::Net, PCI::Device);
    }

    required variable ::string  Ethernet::ifname;

    required sequence   Ethernet::open(Ethernet::Device)
    {
        provided chunk  LKM::prototypes();
        provided chunk  LKM::code();
    }

    required sequence   Ethernet::send(Ethernet::Device dev, Socket::SKBuff skb)
    {
        provided chunk  LKM::prototypes();
        provided chunk  LKM::code();
    }

    required sequence   Ethernet::close(Ethernet::Device)
    {
        provided chunk  LKM::prototypes();
        provided chunk  LKM::code();
    }

    required sequence   Ethernet::interrupt_handler(Ethernet::Device)
    {
        provided chunk  LKM::prototypes();
        provided chunk  LKM::code();
    }

    provided sequence   Ethernet::init()
    {
        provided chunk  LKM::data();
        provided chunk  PCI::pci_probe_hook(PCI::Device);

        provided pointcut   Ethernet::create_device(PCI::Device, Ethernet::Device);
    }

    provided sequence   Ethernet::exit()
    {
        provided chunk  PCI::pci_remove_hook(PCI::Device);

        provided pointcut   Ethernet::destroy_device(PCI::Device, Ethernet::Device);
    }
}
